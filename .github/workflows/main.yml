name: Main workflow

on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main
    types:
    - created
    - synchronize

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: npm
    - run: npm ci
    - run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: npm
    - run: npm ci
    - run: npm run typecheck

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: npm
    - run: npm ci
    - run: npm run test

  license:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: npm
    - run: npm ci
    - run: npm run license

  unimported:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: npm
    - run: npm ci
    - run: npm run unimported

  needs-release:
    needs:
    - eslint
    - typecheck
    - test
    - license
    - unimported
    runs-on: ubuntu-latest
    outputs:
      current-release: ${{ steps.current-version.outputs.version }}
      needs-release: ${{ steps.needs-release.outputs.needs-release }}
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - id: current-version
      run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
    - run: echo ${{ github.token }} | gh auth login --with-token
    - run: gh auth setup-git
    - id: needs-release
      run:
        (gh release view ${{ steps.current-version.outputs.version }} --json "tagName" &&
          echo "needs-release=false") >> $GITHUB_OUTPUT ||
        echo "needs-release=true" >> $GITHUB_OUTPUT
    - id: changelog
      run: |
        if [ -n "$(gh release view --json tagName --jq .tagName)" ]; then
          echo "changelog=v$(gh release view --json tagName --jq .tagName)...HEAD" >> $GITHUB_OUTPUT
        else
          echo "changelog=" >> $GITHUB_OUTPUT
        fi
  collect-binaries:
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          output: vulnerabill-linux
        - os: macos-latest
          output: vulnerabill-macos
        - os: windows-latest
          output: vulnerabill.exe
    needs: needs-release
    if: needs.needs-release.outputs.needs-release == 'true'
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: npm
    - run: npm ci
    - run: npm run prod
    - run: npm run package -- --output ${{ matrix.output }}
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.output }}
        path: ${{ matrix.output }}

  release:
    runs-on: ubuntu-latest
    needs:
    - needs-release
    - collect-binaries
    if: needs.needs-release.outputs.needs-release == 'true'
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - uses: actions/download-artifact@v3
      with:
        name: vulnerabill-linux
    - uses: actions/download-artifact@v3
      with:
        name: vulnerabill-macos
    - uses: actions/download-artifact@v3
      with:
        name: vulnerabill.exe
    - run: echo ${{ github.token }} | gh auth login --with-token
    - run: gh auth setup-git
    - run: git config user.name "GitHub Actions"
    - run: git tag "v${{ needs.needs-release.outputs.current-release }}" -a -m "${{ github.event.commits[0].message }}"
    - run: git push origin "v${{ needs.needs-release.outputs.current-release }}"
    - id: changelog
      run: |
        BREAKING=$(git log --pretty="%s (@%an)" ${{ needs.needs-release.outputs.changelog }} | grep ":zap::zap:")
        FEATURES=$(git log --pretty="%s (@%an)" ${{ needs.needs-release.outputs.changelog }} | grep ":zap:" | grep -v ":zap::zap:")
        FIXES=$(git log --pretty="%s (@%an)" ${{ needs.needs-release.outputs.changelog }} | grep ":hammer:")
        OTHERS=$(git log --pretty="%s (@%an)" ${{ needs.needs-release.outputs.changelog }} | grep -v ":zap:" | grep -v ":hammer:")
        if [ -n "$BREAKING" ]; then
          echo "## Breaking Changes" >> "RELEASE.md"
          git log --pretty="%s (@%an)" ${{ needs.needs-release.outputs.changelog }} | grep -v ":zap::zap:" >> "RELEASE.md"
          echo -e "\n" >> RELEASE.md
        fi
        if [ -n "$FEATURES" ]; then
          echo "## Features" >> "RELEASE.md"
          git log --pretty="%s (@%an)" ${{ needs.needs-release.outputs.changelog }} | grep ":zap:" | grep -v ":zap::zap:" >> "RELEASE.md"
          echo -e "\n" >> RELEASE.md
        fi
        if [ -n "$FIXES" ]; then
          echo "## Fixes" >> "RELEASE.md"
          git log --pretty="%s (@%an)" ${{ needs.needs-release.outputs.changelog }} | grep ":hammer:" >> "RELEASE.md"
          echo -e "\n" >> RELEASE.md
        fi
        if [ -n "$OTHERS" ]; then
          echo "## Others" >> "RELEASE.md"
          git log --pretty="%s (@%an)" ${{ needs.needs-release.outputs.changelog }} | grep -v ":zap:" | grep -v ":hammer:" >> "RELEASE.md"
          echo -e "\n" >> RELEASE.md
        fi
    - run:
        gh release create --title "vulnerabill ${{ needs.needs-release.outputs.current-release }}" \
          --notes-file "RELEASE.md" \
          "v${{ needs.needs-release.outputs.current-release }}" \
          vulnerabill-linux vulnerabill-macos vulnerabill.exe

